- hosts: localhost
  gather_facts: no
  vars:
        some_int_7: 7
        some_other_int_7: "{{ some_int_7 }}"
        foo_dict:
          baz_8_int: 8
  tasks:
      - name: debug foo_dict (msg)
        debug: msg="{{ foo_dict }}"

      - name: debug var=foo_dict shows foo_dict.baz_8_int as an int
        debug: var=foo_dict

      - name: debug var=foo_dict.baz_8_int_i should be int 8 but is a string "8" (var)
        debug: var=foo_dict.baz_8_int

      - name: debug msg=foo_dict.baz_8_int_i should be int 8 but is a string "8" (msg)
        debug: msg="{{ foo_dict.baz_8_int }}"

      - name: debug var=\{\{ foo_dict.baz_8_int \}\} should be int 8 but is a string "8" (var2)
        debug: var={{ foo_dict.baz_8_int }}

      - name: debug showing foo_dict and foo_dict.baz_8_int access at same time
        debug: msg="foo_dict {{ foo_dict }}  foo_dict.baz_8_int {{ foo_dict.baz_8_int }}"

      - name: assert foo_dict.baz_8_int is an int 8 and not a string "8"
        assert:
            that:
                - foo_dict.baz_8_int == 8
                - foo_dict.baz_8_int != "8"

      - name: debug some_int_7
        debug: var=some_int_7

      - name: debug msg some_int_7
        debug: msg="{{ some_int_7 }}"

      - name: debug some_other_int_7
        debug: var=some_other_int_7

      - name: debug msg some_other_int_7
        debug: msg="{{ some_other_int_7 }}"

      - name: assert some_int_7 is an int 7 and not a string "7"
        assert:
            that:
                - some_int_7 == 7

      - name: assert some_other_int_7 is an int 7 and not a string "7"
        assert:
            that:
                - some_other_int_7 == 7



  #      - name: assert dict compare
  #      assert:
  #          that:
  #              - foo_dict == {baz_8_int: 8}
